#!/bin/sh
#
# 25_ubuntu_kernel_upgrade - A script to upgrade the Ubuntu kernel and remove old kernels.
#
# Required environment variables:
#   UBUNTU_ARCHITECTURE : Target Ubuntu architecture for the kernel upgrade.
#                         Example: generic
#
# Note:
#   - This script assumes that the system is running Ubuntu and has internet access.

start_message() {
    printf -- "[INFO] Loading: ubuntu_kernel_upgrade has been loaded at "
    date "+%Y/%m/%d %T"
}

# Return last command status
purge_old_kernels() {
    CURKERNEL=$(uname -r | sed 's/-*[a-z]//g' | sed 's/-386//g')
    LINUXPKG="linux-(image|headers|ubuntu-modules|restricted-modules)"
    METALINUXPKG="linux-(image|headers|restricted-modules)-(generic|i386|server|common|rt|xen)"

    OLDKERNELS=$(dpkg -l | awk '{print $2}' | grep -E "$LINUXPKG" | grep -vE "$METALINUXPKG" | grep -v "$CURKERNEL")

    if [ -n "$OLDKERNELS" ]; then
        printf -- "[INFO] Executing: apt-get purge at "
        date "+%Y/%m/%d %T"

        apt-get -y purge $OLDKERNELS
        RC=$?
        echo "[INFO] Return code is $RC"
        return $RC
    else
        echo "[INFO] No old kernels to remove."
        return 0
    fi
}

ubuntu_kernel_upgrade() {
    purge_old_kernels || return $?

    printf -- "[INFO] Executing: apt upgrade at "
    date "+%Y/%m/%d %T"

    if [ -n "${JOBLOG:-}" ]; then
        apt-get update >> "$JOBLOG" 2>&1
    else
        apt-get update
    fi
    RC=$?
    echo "[INFO] Return code is $RC"
    [ "$RC" -ne 0 ] && return $RC

    apt-get -y install "linux-image-$UBUNTU_ARCHITECTURE" \
                       "linux-headers-$UBUNTU_ARCHITECTURE" \
                       "linux-$UBUNTU_ARCHITECTURE"
    RC=$?
    echo "[INFO] Return code is $RC"
    return $RC
}

system_upgrade() {
    if [ -n "$UBUNTU_ARCHITECTURE" ] && [ -f /etc/debian_version ] && [ -f /etc/lsb-release ]; then
        ubuntu_kernel_upgrade
        RC=$?
        echo "[INFO] Return code is $RC"
        return $RC
    else
        printf -- "[WARN] Skipping upgrade: System does not meet requirements\n" >&2
        return 3
    fi
}

main() {
    start_message
    system_upgrade
    return $?
}

main "$@"
