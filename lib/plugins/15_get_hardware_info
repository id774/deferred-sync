#!/bin/sh
#
# 15_get_hardware_info - A script to retrieve hardware information.
#
# Outputs:
#   - System information (`dmidecode --type system`)
#   - Battery and power details (`acpi -abi`)
#   - SMART status for available disks with serial numbers
#
# Note:
#   - This script assumes it is running on a POSIX-compliant system.
#   - `dmidecode`, `acpi`, `smartctl`, and `udevadm` must be installed to retrieve respective information.

start_message() {
    printf -- "[INFO] Loading: get_hardware_info has been loaded at "
    date "+%Y/%m/%d %T"
}

get_hardware_info() {
    # Retrieve system information
    if command -v dmidecode > /dev/null 2>&1; then
        echo "[INFO] Retrieving system information using dmidecode"
        dmidecode --type system
    else
        echo "[WARN] dmidecode command not found" >&2
    fi

    # Retrieve battery and power information
    if command -v acpi > /dev/null 2>&1; then
        echo "[INFO] Retrieving battery and power status using acpi"
        acpi -abi
    else
        echo "[WARN] acpi command not found" >&2
    fi

    # Retrieve SMART data for detected disks
    if command -v smartctl > /dev/null 2>&1; then
        echo "[INFO] Checking SMART status for available disks"
        for DEVICE in /dev/sd[a-f]; do
            if [ -b "$DEVICE" ]; then
                SERIAL=$(udevadm info --query=all --name="$DEVICE" 2>/dev/null | sed -n 's/^E: ID_SERIAL_SHORT=//p')
                echo "[INFO] Device: $DEVICE Serial: ${SERIAL:-N/A}"
                echo "[INFO] Attempting smartctl -a -d sat $DEVICE"
                if ! smartctl -a -d sat "$DEVICE"; then
                    echo "[INFO] -d sat failed for $DEVICE, falling back to default"
                    smartctl -a "$DEVICE"
                fi
            fi
        done
    else
        echo "[WARN] smartctl command not found" >&2
    fi
}

main() {
    start_message
    get_hardware_info
}

main "$@"
