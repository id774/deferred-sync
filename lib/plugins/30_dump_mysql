#!/bin/sh
#
# 30_dump_mysql - A script to dump MySQL databases and compress the dump.
#
# Required environment variables:
#   MYSQLDUMP  : Directory where the dump files (SQL and compressed files) will be stored.
#                Example: /var/lib/mysql/mysql_dump
#   MYSQL_USER : MySQL username.
#                Example: root
#   MYSQL_PASS : MySQL password.
#   MYSQL_DBS  : List of databases to back up (space-separated).
#                Example: "db1 db2 db3"
#
# Note:
#   - This script assumes that authentication is handled via the MySQL password environment variable.

start_message() {
    printf -- "[INFO] Loading: dump_mysql has been loaded at "
    date "+%Y/%m/%d %T"
}

get_mysqldump() {
    printf -- "mysqldump %s\n" "$1"

    # Remove existing compressed dump if it exists
    [ -f "$MYSQLDUMP/$1.zip" ] && rm "$MYSQLDUMP/$1.zip"

    printf -- "[INFO] Executing: mysqldump at "
    date "+%Y/%m/%d %T"

    # Perform the dump and compress the output
    mysqldump --add-drop-table --add-locks --password="$3" -u "$2" \
      "$1" > "$MYSQLDUMP/$1.sql" \
      && gzip -f "$MYSQLDUMP/$1.sql"

    RC=$?
    echo "[INFO] Return code is $RC"
    return $RC
}

dump_mysql() {
    FAILED=0
    for MYSQL_DB in $MYSQL_DBS; do
        get_mysqldump "$MYSQL_DB" "$MYSQL_USER" "$MYSQL_PASS" || FAILED=$?
    done
    return $FAILED
}

main() {
    start_message
    dump_mysql
    return $?
}

main "$@"
