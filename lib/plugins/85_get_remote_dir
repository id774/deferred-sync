#!/bin/sh
#
# 85_get_remote_dir - A script to sync remote directories to a local target using rsync.
#
# Required environment variables:
#   GET_TARGET_DIR  : Local target directory for remote sync.
#                     Example: /var/remotebackups
#   REMOTE_USER     : Username for remote SSH login.
#                     Example: backupuser
#   GET_HOSTS       : List of remote hosts (space-separated).
#                     Example: "server1.example.com server2.example.com"
#   GET_REMOTE_DIRS : List of remote directories to sync (space-separated).
#                     Example: "/remote/data /remote/logs"
#   DRY_RUN         : If set to "true", rsync runs in dry-run mode.
#
# Note:
#   - This script assumes that SSH authentication is configured via SSH keys.

get_remote() {
    OPTS="-avz --delete -e ssh"

    [ "$DRY_RUN" = "true" ] && OPTS="$OPTS --dry-run"

    if [ -d "$GET_TARGET_DIR" ]; then
        printf -- "[INFO] rsync %s %s@%s:%s %s/%s\n" "$OPTS" "$REMOTE_USER" "$1" "$2" "$GET_TARGET_DIR" "$1"

        if ping -c 1 "$1" > /dev/null 2>&1; then
            rsync $OPTS "$REMOTE_USER@$1:$2" "$GET_TARGET_DIR/$1"
        else
            printf -- "[WARN] Skipping retrieval from %s: Host unreachable\n" "$1" >&2
        fi

        RC=$?
        echo "[INFO] Return code is $RC"
    else
        printf -- "[INFO] Target directory %s does not exist. Skipping.\n" "$GET_TARGET_DIR"
    fi
}

get_remote_dir() {
    printf -- "[INFO] Executing: get remote dir at "
    date "+%Y/%m/%d %T"

    for GET_HOST in $GET_HOSTS; do
        for GET_REMOTE_DIR in $GET_REMOTE_DIRS; do
            get_remote "$GET_HOST" "$GET_REMOTE_DIR"
        done
    done
}

printf -- "[INFO] Loading: get_remote_dir has been loaded at "
date "+%Y/%m/%d %T"

get_remote_dir
