#!/bin/sh
#
# 70_incremental_backup - A script to perform incremental backups with rsync.
#
# Required environment variables:
#   BACKUPTO    : Target backup directory.
#                 Example: /var/backups
#   BACKUPDIRS  : List of directories to back up (space-separated).
#                 Example: "/home /etc /var/www"
#   EXCLUDEFILE : File containing patterns of files/directories to exclude.
#                 Example: /etc/backup_exclude.conf
#   DRY_RUN     : If set to "true", rsync runs in dry-run mode.
#   EXPIREDAYS  : Number of days before old backups are purged.
#
# Note:
#   - This script assumes that `rsync` is installed and available.

purge_expire_dir() {
    while [ "$#" -gt 0 ]; do
        BDATE=$(echo "$1" | sed "s/_backup_//")
        EXPIREDATE=$(date -d "$EXPIREDAYS days ago" +%Y%m%d)

        if [ "$BDATE" -le "$EXPIREDATE" ]; then
            printf "deleting %s/%s\n" "$BACKUPTO" "$1"
            rm -rf "$BACKUPTO/$1"
        fi
        shift
    done
}

purge_expires() {
    printf "* Deleting old backup directories at "
    date "+%Y/%m/%d %T"

    for DIR in "$BACKUPTO"/*_backup_*; do
        [ -e "$DIR" ] && purge_expire_dir "$(basename "$DIR")"
    done
}

rsync_options() {
    OPTS="--force --delete-excluded \
      --delete --backup \
      --backup-dir=$BACKUPTO/_backup_$DATE \
      -av"

    [ -f "$EXCLUDEFILE" ] && OPTS="$OPTS --exclude-from=<(grep -v '^[# ]*$' "$EXCLUDEFILE")"
    [ "$DRY_RUN" = "true" ] && OPTS="$OPTS --dry-run"
}

exec_rsync() {
    for BACKUPDIR in $BACKUPDIRS; do
        printf "rsync %s %s %s\n" "$OPTS" "$BACKUPDIR" "$BACKUPTO"
        rsync $OPTS "$BACKUPDIR" "$BACKUPTO"

        RC=$?
        echo "Return code is $RC"
    done
}

run_rsync() {
    purge_expires
    rsync_options
    printf "* Executing backup with rsync at "
    date "+%Y/%m/%d %T"
    exec_rsync
}

printf "- [info] run_rsync has been loaded at "
date "+%Y/%m/%d %T"

run_rsync
