#!/bin/sh
#
# 80_backup_to_remote - A script to sync local backups to remote servers using rsync.
#
# Required environment variables:
#   BACKUPTO     : Local backup directory.
#                  Example: /var/backups
#   BACKUPUSER   : Username for remote SSH login.
#                  Example: backupuser
#   REMOTE_HOSTS : List of remote servers (space-separated).
#                  Example: "server1.example.com server2.example.com"
#   REMOTE_DIR   : Target directory on remote servers.
#                  Example: /remote/backup
#   DRY_RUN      : If set to "true", rsync runs in dry-run mode.
#
# Note:
#   - This script assumes that SSH authentication is configured via SSH keys.

mirror_to_remote() {
    OPTS="-avz --delete -e ssh"

    [ "$DRY_RUN" = "true" ] && OPTS="$OPTS --dry-run"

    if [ -d "$BACKUPTO" ]; then
        printf -- "[INFO] rsync %s %s %s@%s:%s\n" "$OPTS" "$BACKUPTO" "$BACKUPUSER" "$1" "$2"

        if ping -c 1 "$1" > /dev/null 2>&1; then
            echo "[INFO] rsync $OPTS $BACKUPTO $BACKUPUSER@$1:$2"
            rsync $OPTS "$BACKUPTO" "$BACKUPUSER@$1:$2"
        else
            printf -- "[INFO] Skipping backup to %s: Host unreachable\n" "$1"
        fi

        RC=$?
        echo "[INFO] Return code is $RC"
    else
        printf -- "[WARN] Backup directory %s does not exist. Skipping.\n" "$BACKUPTO" >&2
    fi
}

backup_to_remote() {
    printf -- "[INFO] * Executing backup to remote at "
    date "+%Y/%m/%d %T"

    for REMOTE_HOST in $REMOTE_HOSTS; do
        mirror_to_remote "$REMOTE_HOST" "$REMOTE_DIR"
    done
}

printf -- "[INFO] - backup_to_remote has been loaded at "
date "+%Y/%m/%d %T"

backup_to_remote
