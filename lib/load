#!/bin/sh
#
# load - A script to dynamically load plugins for deferred-sync.
#
# This script loads the required plugins based on configuration settings.
# It allows for:
#   - Loading specific plugins defined in `PLUGINS`
#   - Loading all available plugins if `LOAD_PLUGINS_ALL=true`
#
# Note:
#   - Plugins are sourced from `$SCRIPT_HOME/lib/plugins/`
#   - Plugins must be readable (`-r`) to be loaded.

FAILED_STATUS=0  # keep first non-zero plugin status

# Load a specific plugin by name
load_plugin() {
    while [ "$#" -gt 0 ]; do
        for PLUGIN in "$SCRIPT_HOME/lib/plugins/"*"$1"; do
            if [ -r "$PLUGIN" ]; then
                . "$PLUGIN"
                st=$?
                [ "$st" -ne 0 ] && {
                    echo "[WARN] plugin failed: $PLUGIN status=$st" >&2
                    [ "$FAILED_STATUS" -eq 0 ] && FAILED_STATUS=$st
                }
            fi
        done
        shift
    done
}

# Load plugins defined in the `PLUGINS` variable
load_plugins_by_config() {
    load_plugin $PLUGINS
}

# Load all available plugins
load_plugins_all() {
    for PLUGIN in "$SCRIPT_HOME/lib/plugins/"*; do
        if [ -r "$PLUGIN" ]; then
            . "$PLUGIN"
            st=$?
            [ "$st" -ne 0 ] && {
                echo "[WARN] plugin failed: $PLUGIN status=$st" >&2
                [ "$FAILED_STATUS" -eq 0 ] && FAILED_STATUS=$st
            }
        fi
    done
}

# Determine which plugins to load based on configuration
load_plugins() {
    if [ "$LOAD_PLUGINS_ALL" = "true" ]; then
        load_plugins_all
    else
        load_plugins_by_config
    fi
}

# Execute plugin loading
load_plugins
exit ${FAILED_STATUS:-0}
